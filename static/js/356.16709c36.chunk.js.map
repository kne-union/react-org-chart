{"version":3,"file":"static/js/356.16709c36.chunk.js","mappings":"wUAIA,MAAMA,EAAWC,IAAkC,IAAjC,SAACC,EAAQ,MAAEC,EAAK,UAAEC,GAAUH,EAC1C,OAAQI,IAAAA,cAAA,MAAID,UAAWE,IAAWF,EAAW,aAAc,OAAQG,EAAYA,IAC3EF,IAAAA,cAAA,OAAKD,UAAWE,IAAW,aAAcC,IAAuBJ,GAC/DK,EAAAA,SAASC,MAAMP,GAAY,GACxBG,IAAAA,cAAA,MAAID,UAAWE,IAAW,qBAAsBC,IAA+BL,GAClF,ECJHQ,EAAOC,IASO,IATN,UACIP,EAAS,SACTF,EAAQ,MACRC,EACAS,WAAAC,EAAa,OACbC,UAAAC,EAAY,MACZC,UAAAC,EAAY,QACZC,YAAAC,EAAc,MACdC,iBAAAC,EAAmB,OACtBV,EACX,OAAQN,IAAAA,cAAA,MAAID,UAAWE,IAAWF,EAAWG,GAAaA,MAAO,CAC7D,gBAAiBM,EACjB,eAAgBE,EAChB,eAAgBE,EAChB,iBAAkBE,EAClB,uBAAwBE,IAExBhB,IAAAA,cAACL,EAAQ,CAACI,UAAU,OAAOD,MAAOA,GAAQD,GACzC,EAGTQ,EAAKY,KAAOtB,ECvBZ,MCHkE,GAAgBuB,cDG7D,CACjBC,KAAM,kBACNC,QAAS,8IAETC,YAAa,uBACbC,IAAK,4JAULC,QAAS,CACLC,QAAQ,EACRzB,UAAW,wBACXG,MAAO,yGAKPuB,KAAM,CAAC,CACXC,MAAO,mDACPC,YAAa,mDACbC,KAAM,8jBAkBNC,MAAO,CAAC,CACRV,KAAM,gBACNE,YAAa,uBACbS,UAAW,GACb,CACEX,KAAM,OACNE,YAAa,OACbS,U,gBCrDSC,EAAW,CAAC,KAAO,kBAAkB,QAAU,QAAQ,gBAAe,EAAK,aAAa,mBAAmB,QAAU,CAAC,CAAC,KAAO,kBAAkB,QAAU,oDAAoD,YAAc,yB,gBCMxO,kBACA,aAEA,IAAIC,EAAS,CAAC,EAAEC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GAChBG,IACHJ,EAAUK,EAAYL,EAASM,EAAWF,IAE5C,CAEA,OAAOJ,CACR,CAEA,SAASM,EAAYF,GACpB,GAAmB,kBAARA,GAAmC,kBAARA,EACrC,OAAOA,EAGR,GAAmB,kBAARA,EACV,MAAO,GAGR,GAAIG,MAAMC,QAAQJ,GACjB,OAAOL,EAAWU,MAAM,KAAML,GAG/B,GAAIA,EAAIM,WAAaC,OAAOC,UAAUF,WAAaN,EAAIM,SAASA,WAAWG,SAAS,iBACnF,OAAOT,EAAIM,WAGZ,IAAIV,EAAU,GAEd,IAAK,IAAIc,KAAOV,EACXP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,KAChCd,EAAUK,EAAYL,EAASc,IAIjC,OAAOd,CACR,CAEA,SAASK,EAAaW,EAAOC,GAC5B,OAAKA,EAIDD,EACIA,EAAQ,IAAMC,EAGfD,EAAQC,EAPPD,CAQT,CAEqCE,EAAOC,SAC3CpB,EAAWqB,QAAUrB,EACrBmB,EAAOC,QAAUpB,QAKhB,KAFwB,EAAF,WACtB,OAAOA,CACP,UAFoB,OAEpB,YAIF,CArEA,E","sources":["../../src/TreeNode.js","../../src/index.js","../../README.md","../node_modules/readme/modules.js","../../node_modules/classnames/index.js"],"sourcesContent":["import React, {Children} from 'react';\nimport classnames from 'classnames';\nimport style from './style.module.scss';\n\nconst TreeNode = ({children, label, className}) => {\n    return (<li className={classnames(className, 'node-lines', 'node', style.node, style['node-lines'])}>\n        <div className={classnames('node-label', style['node-label'])}>{label}</div>\n        {Children.count(children) > 0 && (\n            <ul className={classnames('children-container', style['children-container'])}>{children}</ul>)}\n    </li>);\n};\n\nexport default TreeNode;\n","import React from 'react';\nimport TreeNode from './TreeNode';\nimport classnames from 'classnames';\nimport style from './style.module.scss';\n\nconst Tree = ({\n                  className,\n                  children,\n                  label,\n                  lineHeight = '20px',\n                  lineWidth = '1px',\n                  lineColor = 'black',\n                  nodePadding = '5px',\n                  lineBorderRadius = '5px',\n              }) => {\n    return (<ul className={classnames(className, style.tree)} style={{\n        '--line-height': lineHeight,\n        '--line-width': lineWidth,\n        '--line-color': lineColor,\n        '--node-padding': nodePadding,\n        '--line-border-radius': lineBorderRadius\n    }}>\n        <TreeNode className=\"root\" label={label}>{children}</TreeNode>\n    </ul>);\n};\n\nTree.Node = TreeNode;\n\nexport default Tree;\n","import * as component_1 from '@kne/react-org-chart';\nimport '@kne/react-org-chart/dist/index.css';\nimport * as component_3 from 'antd';\nconst readmeConfig = {\n    name: `react-org-chart`,\n    summary: `<p>用于显示一个树形结构，多由于企业的组织结构图</p>`,\n    \n    packageName: `@kne/react-org-chart`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `react_org_chart_8ded7`,\n        style: `.react_org_chart_8ded7 .ant-card {\n  border-color: black;\n  text-align: center;\n  width: 200px; }\n`,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {default:OrgChart} = ReactOrgChart;\nconst {Card} = antd;\n\nconst BaseExample = ()=>{\n    return <OrgChart label={<Card>root</Card>}>\n        <OrgChart.Node label={<Card>Child 1</Card>}>\n            <OrgChart.Node label={<Card>Grand Child</Card>} />\n            <OrgChart.Node label={<Card>Grand Child2</Card>}>\n                <OrgChart.Node label={<Card>Grand2 Child</Card>} />\n                <OrgChart.Node label={<Card>Grand2 Child2</Card>} />\n            </OrgChart.Node>\n        </OrgChart.Node>\n    </OrgChart>;\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"ReactOrgChart\",\n    packageName: \"@kne/react-org-chart\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_3\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import ReactOrgChart from '@components/react-org-chart/README.md';export default {ReactOrgChart};\nexport const manifest = {\"name\":\"react-org-chart\",\"version\":\"0.1.6\",\"open-version\":true,\"public-url\":\"/react-org-chart\",\"modules\":[{\"name\":\"react-org-chart\",\"baseDir\":\"/home/runner/work/react-org-chart/react-org-chart\",\"packageName\":\"@kne/react-org-chart\"}]};","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["TreeNode","_ref","children","label","className","React","classnames","style","Children","count","Tree","_ref2","lineHeight","_lineHeight","lineWidth","_lineWidth","lineColor","_lineColor","nodePadding","_nodePadding","lineBorderRadius","_lineBorderRadius","Node","ReactOrgChart","name","summary","packageName","api","example","isFull","list","title","description","code","scope","component","manifest","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","includes","key","call","value","newClass","module","exports","default"],"sourceRoot":""}